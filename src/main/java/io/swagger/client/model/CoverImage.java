/*
 * Hytale API
 * Hytale Official API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoverImage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-26T16:07:33.554Z")
public class CoverImage {
  @SerializedName("variants")
  private List<String> variants = null;

  @SerializedName("_id")
  private String id = null;

  @SerializedName("s3Key")
  private String s3Key = null;

  @SerializedName("mimeType")
  private String mimeType = null;

  @SerializedName("attached")
  private Boolean attached = null;

  @SerializedName("contentType")
  private String contentType = null;

  @SerializedName("contentId")
  private String contentId = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("__v")
  private Integer v = null;

  public CoverImage variants(List<String> variants) {
    this.variants = variants;
    return this;
  }

  public CoverImage addVariantsItem(String variantsItem) {
    if (this.variants == null) {
      this.variants = new ArrayList<String>();
    }
    this.variants.add(variantsItem);
    return this;
  }

   /**
   * Get variants
   * @return variants
  **/
  @ApiModelProperty(value = "")
  public List<String> getVariants() {
    return variants;
  }

  public void setVariants(List<String> variants) {
    this.variants = variants;
  }

  public CoverImage id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoverImage s3Key(String s3Key) {
    this.s3Key = s3Key;
    return this;
  }

   /**
   * Get s3Key
   * @return s3Key
  **/
  @ApiModelProperty(value = "")
  public String getS3Key() {
    return s3Key;
  }

  public void setS3Key(String s3Key) {
    this.s3Key = s3Key;
  }

  public CoverImage mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Get mimeType
   * @return mimeType
  **/
  @ApiModelProperty(value = "")
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }

  public CoverImage attached(Boolean attached) {
    this.attached = attached;
    return this;
  }

   /**
   * Get attached
   * @return attached
  **/
  @ApiModelProperty(value = "")
  public Boolean isAttached() {
    return attached;
  }

  public void setAttached(Boolean attached) {
    this.attached = attached;
  }

  public CoverImage contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @ApiModelProperty(value = "")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  public CoverImage contentId(String contentId) {
    this.contentId = contentId;
    return this;
  }

   /**
   * Get contentId
   * @return contentId
  **/
  @ApiModelProperty(value = "")
  public String getContentId() {
    return contentId;
  }

  public void setContentId(String contentId) {
    this.contentId = contentId;
  }

  public CoverImage createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public CoverImage v(Integer v) {
    this.v = v;
    return this;
  }

   /**
   * Get v
   * @return v
  **/
  @ApiModelProperty(value = "")
  public Integer getV() {
    return v;
  }

  public void setV(Integer v) {
    this.v = v;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoverImage coverImage = (CoverImage) o;
    return Objects.equals(this.variants, coverImage.variants) &&
        Objects.equals(this.id, coverImage.id) &&
        Objects.equals(this.s3Key, coverImage.s3Key) &&
        Objects.equals(this.mimeType, coverImage.mimeType) &&
        Objects.equals(this.attached, coverImage.attached) &&
        Objects.equals(this.contentType, coverImage.contentType) &&
        Objects.equals(this.contentId, coverImage.contentId) &&
        Objects.equals(this.createdAt, coverImage.createdAt) &&
        Objects.equals(this.v, coverImage.v);
  }

  @Override
  public int hashCode() {
    return Objects.hash(variants, id, s3Key, mimeType, attached, contentType, contentId, createdAt, v);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoverImage {\n");
    
    sb.append("    variants: ").append(toIndentedString(variants)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    s3Key: ").append(toIndentedString(s3Key)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    attached: ").append(toIndentedString(attached)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    contentId: ").append(toIndentedString(contentId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    v: ").append(toIndentedString(v)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

